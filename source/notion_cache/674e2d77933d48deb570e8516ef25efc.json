{"children":[{"children":[],"uri":"https://www.notion.so/16e14e4c53024871a6f6117d920ff67e","type":"bookmark","createdTime":1614828180000,"lastEditedTime":1614828180000,"link":"https://javascript.plainenglish.io/a-cleaner-api-for-react-ts-components-47d0704a508c","title":"A cleaner API for React TS components","description":"I hope this article shares some light on how to build better React components leveraging TypeScript. This post is an outcome of the efforts of building taggr , the privacy-focused AI gallery. While building taggr , I got deeper into TypeScript, and so far I am loving the added capabilities for annotating types and catching errors at compile time, instead off at runtime.","icon":"https://miro.medium.com/fit/c/256/256/1*4F1ZAI1i-eruO4PnbNvTZg@2x.png","cover":"https://miro.medium.com/max/1200/0*tSW6AxNWNhUJcULK"},{"children":[],"uri":"https://www.notion.so/8b10f5b896474407bba781bccab2d292","type":"heading","createdTime":1614828240000,"lastEditedTime":1614828240000,"title":[["❌ Don't Do like this"]],"depth":3},{"children":[],"uri":"https://www.notion.so/db7c5a394fed46578248ba0a8a402fa7","type":"code","createdTime":1614828252164,"lastEditedTime":1614828240000,"title":[["// paragraph.tsx\nexport type Props = {\n  text: string;\n}const Paragraph = ({text}: Props) => <p>{text}</p>// title.tsx\n// Title is now tightly coupled to paragraph.txs > Props\nimport {Props} from './paragraph' const Title = ({text}: Props) => <h1>{text}</h1>"]],"language":"TypeScript","wrap":true},{"children":[],"uri":"https://www.notion.so/7e40697716c3461b9740f5078ead4936","type":"heading","createdTime":1614828240000,"lastEditedTime":1614828300000,"title":[["✅ Better Way"]],"depth":3},{"children":[],"uri":"https://www.notion.so/6c87d32fe0714ef5a92188bec281d097","type":"code","createdTime":1614828240000,"lastEditedTime":1614828240000,"title":[["// models.ts\nexport interface User {\n name: string,\n age: number;\n};\n// user-profile.tsx\nimport {User} from './models';\ntype Props = {\n user: User,\n date: string, // other props\n};\nconst UserProfile = ({user, date}: Props) => ...\nexport default UserProfile;\n// user-list.tsx\nimport {User} from './models';\ntype Props = {\n users: User[],\n};\nconst UserList = ({users}: Props) => ...\nexport default UserList;"]],"language":"TypeScript","wrap":false},{"children":[],"uri":"https://www.notion.so/b63076d984a5434786009176833bbc6b","type":"text","createdTime":1614828300000,"lastEditedTime":1614828300000,"title":[]},{"children":[],"uri":"https://www.notion.so/a45be64a2bc64063acd1ab656725d397","type":"code","createdTime":1614828300000,"lastEditedTime":1614828300000,"title":[["// type-helpers.ts\nimport * as React from \"react\";\nexport type GetComponentProps<T> = T extends\n| React.ComponentType<infer P>\n| React.Component<infer P>\n? P\n: never;"]],"language":"TypeScript","wrap":false},{"children":[],"uri":"https://www.notion.so/f42a5e2e1c9c4799aeb3cfa29c44f56e","type":"text","createdTime":1614828300000,"lastEditedTime":1614828300000,"title":[]},{"children":[],"uri":"https://www.notion.so/9c134c8e273f449eb4c512ffda2e3090","type":"code","createdTime":1614828300000,"lastEditedTime":1614828300000,"title":[["// title.tsx\ntype Color = \"RED\" | \"BLUE\" | \"GREEN\";\ntype Props = {\n title: string;\n color: Color;\n};\nconst Title = ({ title, color }: Props) => (\n  <h1 style={{ color }}>{title}</h1>\n);\nexport default Title;"]],"language":"TypeScript","wrap":false},{"children":[],"uri":"https://www.notion.so/586d2ecb7d02480da8ec958675956887","type":"text","createdTime":1614828300000,"lastEditedTime":1614828300000,"title":[]},{"children":[],"uri":"https://www.notion.so/8282886a72674433b5b1a75b764155ac","type":"code","createdTime":1614828300000,"lastEditedTime":1614828360000,"title":[["// title-wrapper.tsx\nimport Title from './title';\ntype Props = GetComponentProps<typeof Title> & {\n onClick: () => void;\n};\nconst TitleWrapper = ({onClick, ...rest}: Props) => (\n  <div onClick={onClick}>\n    <Title {...rest} /> \n  </div>\n);\nexport default TitleWrapper;\n// index.ts\nimport TitleWrapper from 'title-wrapper';\n// Full type safety and autocompletion! 🎉\nconst App = () =>  (\n <TitleWrapper\n  title=\"Hello there\"\n  color=\"GREEN\"\n  onClick={() => window.alert(\"title pressed\")} \n />\n);"]],"language":"TypeScript","wrap":false}],"uri":"https://www.notion.so/674e2d77933d48deb570e8516ef25efc","type":"page","createdTime":1614828180000,"lastEditedTime":1614828360000,"title":[["React TS Components"]],"fullWidth":false,"coverPosition":1,"properties":{"!`\"w":[["Yes"]],"'2]%":[["react-typescript-component"]],":H`m":[["Yes"]],"xY$N":[["‣",[["d",{"type":"date","start_date":"2021-03-04"}]]]],"{iD?":[["typescript,react"]],"|Ay0":[["post"]],"title":[["React TS Components"]]}}